################################################
# SERVER PORT CONFIGURATION
################################################
server.port=9090

################################################
# ENDPOINTS WEB CONFIGURATION
################################################
# management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=info,health,metrics,httptrace

################################################
# HTTP TRACING
################################################
# management.trace.http.enabled:true

# the below client id and secret is wrong or configuration during app creation is wrong
#spring.security.oauth2.client.registration.github.client-id=ENC(2PwCin2ai1DiUeT1L7wiHamlre9Ei/XfYetJ2IgFJ4f/U1LFXnxsos/FwdZb9bBSiJ7R6Y2TtqUqnwOViQtbdQ==)
#spring.security.oauth2.client.registration.github.client-secret=ENC(JM1agXj91zJfzU+KMyGXqpyr3gm4m9BgcwnNi9yb0jPha0qYeBkV3mxdrENG9X7fU4B9OXTRIlEUQ3GjL4XpUg74h7/uWZdwQBTkuvYQ3xI=)


#spring.security.oauth2.client.registration.linkedin.client-id=ENC(cCIlYXe09pLI/eK4LW5yaBx5RngaLfeXHo7wLq3yb46rkW9H8YuzLmx4ypcVfscl)
#spring.security.oauth2.client.registration.linkedin.client-secret=ENC(Hp14cHm+k/AkgyGqai06HZ/tv51O4H1WJSazsjCTNNfTJiPKrdbiMamO9vVL3ciM8zsX0VhlghRYDypQdLXBKQ==)

#spring.security.oauth2.client.registration.facebook.client-id=ENC(cGxcIxtUxHi+OduCg7+uBshZh/X5n4cJcE0VvpOgJeal6MCO7rn2DvvX9IbvdzKR)
#spring.security.oauth2.client.registration.facebook.client-secret=ENC(Txv8/Y4i4Ry1zfObP3wYU+2J0d8UE7cmdFU5xdoGazoPiwQmVJVP/TXwO1htmy2bfdUX9CLZrslHvwaPl6eMuOR3PqNxEOVlW74daQfbPk0=)

#spring.security.oauth2.client.registration.google.client-id=ENC(IQz962w+XrU8w72X4b+cMy52y5lhU6rYgV6fI+ptVKpfmIuZODVVG+vo0MptbGx1eL3cWl82B541HjP/JZC5NjzghZlphQMIxBYZBYDjLV4xAx+IuxPxKGBqIhIDDM0IqcyBXV26yd4tvbSz3Msh/w==)
#spring.security.oauth2.client.registration.google.client-secret=ENC(/+s0LDRS5LRcByJFXMSb00tIMiSYe9VFmMdDXrKOLTSSexVDMP/uF1V9/kBts+SPH9YlncuAsfOqDZYbSzV7kg==)




################################################
# HEALTH
################################################
# management.endpoint.health.show-details=always

################################################
# INFO
################################################
info.app.name=@project.name@
info.app.groupId = @project.groupId@
info.app.artifactId = @project.artifactId@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

################################################
# DATABASE CONFIGURATION
################################################
spring.datasource.url=jdbc:mysql://localhost:3306/paymybuddy_maindb? serverTimezone = UTC
spring.datasource.username=ENC(Y9SFGyfIGWdZn6gI2jvEmAjvPLJHPqpOwhHC7HSU0CQd1a18QeeZq8+Q2JeYRfMU)
spring.datasource.password=ENC(Bk1VGUMQIZy53iWVPbWRKZwnpA4/+gjglBmqr9WrzQKsZslQiEILLlHfabz/DX54)
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto = update

################################################
# PATH FOR SQL SCRIPT FOR APPLICATION AND INTEGRATION TESTING
################################################
#spring.sql.init.data-locations=classpath:msqlsourcedata.sql

################################################
# Spring Boot can detect your database type and execute those scripts on startup
################################################
# spring.sql.init.mode=always

################################################
# Once creating the db data can switch off be commenting the above and uncommenting the below configs
################################################
# spring.batch.initialize-schema=never

################################################
# Want to work with higher level Database migration like flyway or liquibase refer below link
################################################
# https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html

################################################
# LOGGING JPA QUERIES To Standard Output
################################################
spring.jpa.show-sql=true

################################################
# To beautify or pretty print the SQL
################################################
spring.jpa.properties.hibernate.format_sql=true

################################################
# LOGGING JPA QUERIES VIA LOGGERS - ONLY IN CASE USING SPRING LOGGER INSTEAD OF Log4j2
################################################
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# https://www.baeldung.com/sql-logging-spring-boot

################################################
# Spring Boot Naming Strategies - Hibernate maps field names using a physical strategy and an implicit strategy.
################################################
# Hibernate Field Naming with Spring Boot
# spring.jpa.properties.hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy (depreciated)
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

################################################
# THYMELEAF CACHE HOT SWAPPING
################################################
# spring.thymeleaf.cache configuration property which can be set to false
# to disable the template cache so that templates can be modified on the fly
# cache property has to do more with performance and has nothing to do with security.
# disable the Thymeleaf cache, the templates will be automatically reloaded when they need to be parsed,
# it has to do with hot swapping your server-side templates.
# spring.thymeleaf.cache=false

# LOG CONFIGURATION

################################################
# https://www.baeldung.com/spring-boot-security-autoconfiguration
# Disabling the Auto-Configuration - GOT TO Comment it WHEN APPLYING WEB SECURITY SETTINGS
################################################
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.ManagementWebSecurityAutoConfiguration
#security.basic.enabled=false
